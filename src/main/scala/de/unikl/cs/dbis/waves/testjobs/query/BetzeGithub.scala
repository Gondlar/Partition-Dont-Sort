package de.unikl.cs.dbis.waves.testjobs.query

import org.apache.spark.SparkConf
import org.apache.spark.sql.{SparkSession,DataFrame}
import org.apache.spark.sql.functions.{col,count,size,array,length}

import de.unikl.cs.dbis.waves.testjobs.JobConfig
import de.unikl.cs.dbis.waves.util.Logger

object BetzeGithub extends QueryRunner {
  def main(args: Array[String]) : Unit = {
    val jobConfig = JobConfig.fromArgs(args)
    val spark = jobConfig.makeSparkSession("BetzeGithub")
    runWithVoid(spark, jobConfig, Seq(
      (df: DataFrame) => df.where(((col("payload.pull_request.base.repo.owner.starred_url").isNotNull) || (col("payload.issue.user.followers_url").isNotNull))).groupBy(col("payload.release.author.following_url")).count().show(),
      (df: DataFrame) => df.where(((col("payload.issue.user.site_admin").isNotNull) || (col("payload.pull_request.base.repo.owner.repos_url").isNotNull))).groupBy(col("payload.member.subscriptions_url")).agg(count(col("payload.forkee.description"))).show(),
      (df: DataFrame) => df.where((((col("payload.issue.user.site_admin").isNotNull) || (col("payload.pull_request.base.repo.owner.repos_url").isNotNull)) && (col("payload.pull_request.base.repo.has_downloads") === true))).groupBy(col("org.url")).agg(count(col("payload.issue.milestone.labels_url"))).show(),
      (df: DataFrame) => df.where((((col("payload.issue.user.site_admin").isNotNull) || (col("payload.pull_request.base.repo.owner.repos_url").isNotNull)) && ((col("payload.pull_request.milestone.creator.following_url").isNotNull) || (col("payload.pull_request.head.repo.owner.id").isNotNull)))).groupBy(col("payload.pull_request.head.repo.stargazers_count")).agg(count(col("payload.pull_request.updated_at"))).show(),
      (df: DataFrame) => df.where((((col("payload.issue.user.site_admin").isNotNull) || (col("payload.pull_request.base.repo.owner.repos_url").isNotNull)) && ((((((col("payload.pull_request.head.user.login").startsWith("i")) || (col("payload.pull_request.head.user.login").startsWith("x"))) || (col("payload.pull_request.head.user.login").startsWith("A"))) || (col("payload.pull_request.head.user.login").startsWith("M"))) || (col("payload.pull_request.head.user.login").startsWith("E"))) || (col("payload.pull_request.head.sha").isNotNull)))).groupBy(col("type")).agg(count(col("actor.gravatar_id"))).show(),
      (df: DataFrame) => df.where((((col("payload.issue.user.site_admin").isNotNull) || (col("payload.pull_request.base.repo.owner.repos_url").isNotNull)) && (col("payload.pull_request.user.starred_url").isNotNull))).groupBy(col("payload.pull_request.base.repo.updated_at")).count().show(),
      (df: DataFrame) => df.where((((col("payload.issue.user.site_admin").isNotNull) || (col("payload.pull_request.base.repo.owner.repos_url").isNotNull)) && (col("payload.pull_request._links.html.href").isNotNull))).groupBy(col("actor.login")).count().show(),
      (df: DataFrame) => df.where((((col("payload.issue.user.site_admin").isNotNull) || (col("payload.pull_request.base.repo.owner.repos_url").isNotNull)) && (col("payload.pull_request.base.repo.has_downloads").isNotNull))).groupBy(col("payload.pull_request.base.repo.subscription_url")).count().show(),
      (df: DataFrame) => df.where(((((col("payload.issue.user.site_admin").isNotNull) || (col("payload.pull_request.base.repo.owner.repos_url").isNotNull)) && (col("payload.pull_request.base.repo.has_downloads").isNotNull)) && (((col("payload.pull_request.head.repo.ssh_url").isNotNull) && (col("payload.pull_request.head.repo.clone_url").isNotNull)) && (col("payload.pull_request.merged_by.following_url").isNotNull)))).groupBy(col("payload.pull_request.head.repo.milestones_url")).sum("payload.comment.user.id").show(),
      (df: DataFrame) => df.where((((((col("payload.issue.user.site_admin").isNotNull) || (col("payload.pull_request.base.repo.owner.repos_url").isNotNull)) && (col("payload.pull_request.base.repo.has_downloads").isNotNull)) && (((col("payload.pull_request.head.repo.ssh_url").isNotNull) && (col("payload.pull_request.head.repo.clone_url").isNotNull)) && (col("payload.pull_request.merged_by.following_url").isNotNull))) && ((col("payload.pull_request.head.repo.homepage").startsWith("h")) || (col("payload.pull_request.commits") >= 7930.223986)))).groupBy(col("actor.avatar_url")).agg(count(col("payload.pull_request.head.repo.git_refs_url"))).show(),

      // (df: DataFrame) => df.where(((col("payload.ref_type").isNotNull) || (col("payload.pull_request.head.repo.forks_url").startsWith("h")))).groupBy(col("payload.issue.milestone.closed_issues")).count().show(),
      // (df: DataFrame) => df.where((((col("payload.ref_type").isNotNull) || (col("payload.pull_request.head.repo.forks_url").startsWith("h"))) && (col("payload.pull_request.head.repo.issues_url").isNotNull))).groupBy(col("created_at")).count().show(),
      // (df: DataFrame) => df.where((((col("payload.ref_type").isNotNull) || (col("payload.pull_request.head.repo.forks_url").startsWith("h"))) && (col("payload.pull_request.closed_at").isNotNull))).groupBy(col("payload.pull_request.merged_by.received_events_url")).agg(count(col("payload.action"))).show(),
      // (df: DataFrame) => df.where(((((col("payload.ref_type").isNotNull) || (col("payload.pull_request.head.repo.forks_url").startsWith("h"))) && (col("payload.pull_request.closed_at").isNotNull)) && (((((col("payload.pull_request.head.repo.mirror_url").startsWith("ht")) && (col("payload.pull_request.head.repo.mirror_url").startsWith("h"))) || (col("payload.pull_request.milestone.html_url").isNotNull)) || (col("payload.pull_request.milestone.labels_url").startsWith("h"))) || (col("payload.pull_request.merged_by.received_events_url").isNotNull)))).groupBy(col("payload.pull_request.milestone.creator.avatar_url")).agg(count(col("payload.pull_request.merged_by.gravatar_id"))).show(),
      // (df: DataFrame) => df.where((((((col("payload.ref_type").isNotNull) || (col("payload.pull_request.head.repo.forks_url").startsWith("h"))) && (col("payload.pull_request.closed_at").isNotNull)) && (((((col("payload.pull_request.head.repo.mirror_url").startsWith("ht")) && (col("payload.pull_request.head.repo.mirror_url").startsWith("h"))) || (col("payload.pull_request.milestone.html_url").isNotNull)) || (col("payload.pull_request.milestone.labels_url").startsWith("h"))) || (col("payload.pull_request.merged_by.received_events_url").isNotNull))) && ((col("payload.pull_request.mergeable_state").isNotNull) && (col("payload.pull_request.base.repo.owner.type").startsWith("O"))))).groupBy(col("org.gravatar_id")).agg(count(col("payload.pull_request.milestone.updated_at"))).show(),
      // (df: DataFrame) => df.where((((((col("payload.ref_type").isNotNull) || (col("payload.pull_request.head.repo.forks_url").startsWith("h"))) && (col("payload.pull_request.closed_at").isNotNull)) && (((((col("payload.pull_request.head.repo.mirror_url").startsWith("ht")) && (col("payload.pull_request.head.repo.mirror_url").startsWith("h"))) || (col("payload.pull_request.milestone.html_url").isNotNull)) || (col("payload.pull_request.milestone.labels_url").startsWith("h"))) || (col("payload.pull_request.merged_by.received_events_url").isNotNull))) && (col("org.id").isNotNull))).groupBy(col("payload.pull_request.head.repo.forks_count")).agg(count(col("payload.pull_request.milestone.created_at"))).show(),
      // (df: DataFrame) => df.where(((((((col("payload.ref_type").isNotNull) || (col("payload.pull_request.head.repo.forks_url").startsWith("h"))) && (col("payload.pull_request.closed_at").isNotNull)) && (((((col("payload.pull_request.head.repo.mirror_url").startsWith("ht")) && (col("payload.pull_request.head.repo.mirror_url").startsWith("h"))) || (col("payload.pull_request.milestone.html_url").isNotNull)) || (col("payload.pull_request.milestone.labels_url").startsWith("h"))) || (col("payload.pull_request.merged_by.received_events_url").isNotNull))) && (col("org.id").isNotNull)) && (col("payload.pull_request.base.repo.has_wiki") === true))).groupBy(col("payload.pull_request.head.repo.branches_url")).agg(count(col("org.login"))).show(),
      // (df: DataFrame) => df.where((((((((col("payload.ref_type").isNotNull) || (col("payload.pull_request.head.repo.forks_url").startsWith("h"))) && (col("payload.pull_request.closed_at").isNotNull)) && (((((col("payload.pull_request.head.repo.mirror_url").startsWith("ht")) && (col("payload.pull_request.head.repo.mirror_url").startsWith("h"))) || (col("payload.pull_request.milestone.html_url").isNotNull)) || (col("payload.pull_request.milestone.labels_url").startsWith("h"))) || (col("payload.pull_request.merged_by.received_events_url").isNotNull))) && (col("org.id").isNotNull)) && (col("payload.pull_request.base.repo.has_wiki") === true)) && (((((col("payload.pull_request.base.user.login").startsWith("A")) || (col("payload.pull_request.base.user.login").startsWith("E"))) || (col("payload.pull_request.base.user.login").startsWith("S"))) || (col("payload.pull_request.base.user.login").startsWith("i"))) || (col("actor.id") <= 5508499.860930)))).groupBy(col("type")).agg(count(col("payload.pull_request.head.repo.issue_comment_url"))).show(),
      // (df: DataFrame) => df.where((((((((col("payload.ref_type").isNotNull) || (col("payload.pull_request.head.repo.forks_url").startsWith("h"))) && (col("payload.pull_request.closed_at").isNotNull)) && (((((col("payload.pull_request.head.repo.mirror_url").startsWith("ht")) && (col("payload.pull_request.head.repo.mirror_url").startsWith("h"))) || (col("payload.pull_request.milestone.html_url").isNotNull)) || (col("payload.pull_request.milestone.labels_url").startsWith("h"))) || (col("payload.pull_request.merged_by.received_events_url").isNotNull))) && (col("org.id").isNotNull)) && (col("payload.pull_request.base.repo.has_wiki") === true)) && (col("payload.pull_request.base.repo.forks_count") <= 12284.964847))).groupBy(col("payload.pull_request.base.user.site_admin")).agg(count(col("payload.pull_request.diff_url"))).show(),
      // (df: DataFrame) => df.where((((((((col("payload.ref_type").isNotNull) || (col("payload.pull_request.head.repo.forks_url").startsWith("h"))) && (col("payload.pull_request.closed_at").isNotNull)) && (((((col("payload.pull_request.head.repo.mirror_url").startsWith("ht")) && (col("payload.pull_request.head.repo.mirror_url").startsWith("h"))) || (col("payload.pull_request.milestone.html_url").isNotNull)) || (col("payload.pull_request.milestone.labels_url").startsWith("h"))) || (col("payload.pull_request.merged_by.received_events_url").isNotNull))) && (col("org.id").isNotNull)) && (col("payload.pull_request.base.repo.has_wiki") === true)) && ((((col("payload.pull_request.assignee.received_events_url").isNotNull) || (col("payload.pull_request.merged_by.site_admin") === true)) || (col("payload.pull_request.head.repo.homepage").startsWith("http://"))) || (col("payload.pull_request.base.repo.watchers") <= 33920.585499)))).groupBy(col("payload.pull_request.head.repo.has_wiki")).count().show(),

      (df: DataFrame) => df.where((((col("payload.issue.user").isNotNull) || (col("payload.member.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.open_issues") <= 7527.836822))).groupBy(col("payload.issue.milestone.closed_at")).agg(count(col("payload.forkee.commits_url"))).show(),
      (df: DataFrame) => df.where(((((col("payload.issue.user").isNotNull) || (col("payload.member.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.open_issues") <= 7527.836822)) && (col("payload.pull_request.base.user.site_admin").isNotNull))).groupBy(col("payload.pull_request.head.repo.git_refs_url")).count().show(),
      (df: DataFrame) => df.where(((((col("payload.issue.user").isNotNull) || (col("payload.member.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.open_issues") <= 7527.836822)) && ((col("payload.pull_request.milestone.state").isNotNull) || (col("payload.pull_request.merged_at").isNotNull)))).groupBy(col("created_at")).count().show(),
      (df: DataFrame) => df.where((((((col("payload.issue.user").isNotNull) || (col("payload.member.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.open_issues") <= 7527.836822)) && ((col("payload.pull_request.milestone.state").isNotNull) || (col("payload.pull_request.merged_at").isNotNull))) && (col("payload.comment.updated_at").startsWith("20")))).groupBy(col("payload.number")).agg(count(col("payload.pull_request.head.repo.forks"))).show(),
      (df: DataFrame) => df.where(((((((col("payload.issue.user").isNotNull) || (col("payload.member.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.open_issues") <= 7527.836822)) && ((col("payload.pull_request.milestone.state").isNotNull) || (col("payload.pull_request.merged_at").isNotNull))) && (col("payload.comment.updated_at").startsWith("20"))) && ((((col("payload.pull_request.head.repo.git_commits_url").isNotNull) && (col("payload.pull_request.head.repo.milestones_url").startsWith("ht"))) && (col("payload.pull_request.milestone.creator.subscriptions_url").isNotNull)) || (col("org.avatar_url").isNotNull)))).groupBy(col("payload.pull_request.assignee.organizations_url")).agg(count(col("payload.pull_request.milestone.closed_at"))).show(),
      (df: DataFrame) => df.where(((((((col("payload.issue.user").isNotNull) || (col("payload.member.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.open_issues") <= 7527.836822)) && ((col("payload.pull_request.milestone.state").isNotNull) || (col("payload.pull_request.merged_at").isNotNull))) && (col("payload.comment.updated_at").startsWith("20"))) && ((((((((col("payload.pull_request.base.repo.full_name").startsWith("A")) || (col("payload.pull_request.base.repo.full_name").startsWith("S"))) || (col("payload.pull_request.base.repo.full_name").startsWith("E"))) || (col("payload.pull_request.base.repo.full_name").startsWith("e"))) || (col("payload.pull_request.base.repo.full_name").startsWith("i"))) || (col("payload.pull_request.head.user.repos_url").startsWith("ht"))) && (col("payload.pull_request.head.repo.languages_url").isNotNull)) && (col("payload.pull_request.head.repo.open_issues") <= 3701.470321)))).groupBy(col("payload.pull_request.base.repo.releases_url")).agg(count(col("repo.url"))).show(),
      (df: DataFrame) => df.where(((((((col("payload.issue.user").isNotNull) || (col("payload.member.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.open_issues") <= 7527.836822)) && ((col("payload.pull_request.milestone.state").isNotNull) || (col("payload.pull_request.merged_at").isNotNull))) && (col("payload.comment.updated_at").startsWith("20"))) && ((((col("payload.pull_request.head.repo.size") === 5975338) || (col("payload.pull_request.base.repo.has_issues") === false)) || ((col("id").startsWith("2")) || (col("id").startsWith("33")))) || (col("payload.pull_request.head.repo.has_issues") === false)))).groupBy(col("type")).agg(count(col("payload.pull_request.merged_at"))).show(),
      (df: DataFrame) => df.where(((((((col("payload.issue.user").isNotNull) || (col("payload.member.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.open_issues") <= 7527.836822)) && ((col("payload.pull_request.milestone.state").isNotNull) || (col("payload.pull_request.merged_at").isNotNull))) && (col("payload.comment.updated_at").startsWith("20"))) && (((((((col("payload.pull_request.head.repo.description").startsWith("E")) || (col("payload.pull_request.head.repo.description").startsWith("C"))) || (col("payload.pull_request.head.repo.description").startsWith("A"))) || (col("payload.pull_request.head.repo.description").startsWith("S"))) || (col("payload.pull_request.head.repo.description").startsWith("O"))) || (col("payload.pull_request.user.gravatar_id").isNotNull)) && (col("payload.comment.position") <= 3100.195657)))).groupBy(col("payload.comment.user.html_url")).agg(count(col("payload.pull_request.milestone.state"))).show(),
      (df: DataFrame) => df.where((((((((col("payload.issue.user").isNotNull) || (col("payload.member.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.open_issues") <= 7527.836822)) && ((col("payload.pull_request.milestone.state").isNotNull) || (col("payload.pull_request.merged_at").isNotNull))) && (col("payload.comment.updated_at").startsWith("20"))) && (((((((col("payload.pull_request.head.repo.description").startsWith("E")) || (col("payload.pull_request.head.repo.description").startsWith("C"))) || (col("payload.pull_request.head.repo.description").startsWith("A"))) || (col("payload.pull_request.head.repo.description").startsWith("S"))) || (col("payload.pull_request.head.repo.description").startsWith("O"))) || (col("payload.pull_request.user.gravatar_id").isNotNull)) && (col("payload.comment.position") <= 3100.195657))) && ((((((((col("payload.comment.body").startsWith("`")) || (col("payload.comment.body").startsWith("\""))) || (col("payload.comment.body").startsWith("@"))) || (col("payload.comment.body").startsWith("'"))) || (col("payload.comment.body").startsWith("("))) || (col("payload.pull_request.milestone.creator.subscriptions_url").isNotNull)) || (col("payload.pull_request.milestone.url").isNotNull)) || (col("payload.pull_request.assignee.avatar_url").isNotNull)))).groupBy(col("repo.url")).agg(count(col("payload.pull_request.base.repo.url"))).show(),
      (df: DataFrame) => df.where((((((((col("payload.issue.user").isNotNull) || (col("payload.member.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.open_issues") <= 7527.836822)) && ((col("payload.pull_request.milestone.state").isNotNull) || (col("payload.pull_request.merged_at").isNotNull))) && (col("payload.comment.updated_at").startsWith("20"))) && (((((((col("payload.pull_request.head.repo.description").startsWith("E")) || (col("payload.pull_request.head.repo.description").startsWith("C"))) || (col("payload.pull_request.head.repo.description").startsWith("A"))) || (col("payload.pull_request.head.repo.description").startsWith("S"))) || (col("payload.pull_request.head.repo.description").startsWith("O"))) || (col("payload.pull_request.user.gravatar_id").isNotNull)) && (col("payload.comment.position") <= 3100.195657))) && (((col("payload.pull_request.assignee.site_admin") === false) || (((((col("payload.pull_request.base.repo.default_branch").startsWith("r")) || (col("payload.pull_request.base.repo.default_branch").startsWith("v"))) || (col("payload.pull_request.base.repo.default_branch").startsWith("s"))) || (col("payload.pull_request.base.repo.default_branch").startsWith("1"))) || (col("payload.pull_request.base.repo.default_branch").startsWith("m")))) || (col("payload.pull_request.milestone.labels_url").startsWith("h"))))).groupBy(col("payload.comment.diff_hunk")).agg(count(col("payload.pull_request.commits_url"))).show(),

      // These work but are not needed -> drop becaue we generated them später
      // (df: DataFrame) => df.where(((((col("payload.pull_request.base.repo.svn_url").isNotNull) || (col("payload.release.author.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.owner.received_events_url").startsWith("h"))) || (col("payload.issue.user.received_events_url").isNotNull))).groupBy(col("payload.pull_request.commits_url")).count().show(),
      // (df: DataFrame) => df.where((((((col("payload.pull_request.base.repo.svn_url").isNotNull) || (col("payload.release.author.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.owner.received_events_url").startsWith("h"))) || (col("payload.issue.user.received_events_url").isNotNull)) && ((col("payload.pull_request.comments") === 431) || (col("payload.pull_request.base.repo.commits_url").isNotNull)))).groupBy(col("payload.pull_request.head.user.received_events_url")).agg(count(col("payload.pull_request.mergeable"))).show(),
      // (df: DataFrame) => df.where(((((((col("payload.pull_request.base.repo.svn_url").isNotNull) || (col("payload.release.author.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.owner.received_events_url").startsWith("h"))) || (col("payload.issue.user.received_events_url").isNotNull)) && ((col("payload.pull_request.comments") === 431) || (col("payload.pull_request.base.repo.commits_url").isNotNull))) && (col("payload.pull_request.merged_by.type").isNotNull))).groupBy(col("payload.pull_request.head.repo.description")).agg(count(col("payload.pull_request.additions"))).show(),
      // (df: DataFrame) => df.where(((((((col("payload.pull_request.base.repo.svn_url").isNotNull) || (col("payload.release.author.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.owner.received_events_url").startsWith("h"))) || (col("payload.issue.user.received_events_url").isNotNull)) && ((col("payload.pull_request.comments") === 431) || (col("payload.pull_request.base.repo.commits_url").isNotNull))) && ((((((col("payload.pull_request.head.user.login").startsWith("i")) || (col("payload.pull_request.head.user.login").startsWith("x"))) || (col("payload.pull_request.head.user.login").startsWith("A"))) || (col("payload.pull_request.head.user.login").startsWith("E"))) || (col("payload.pull_request.head.user.login").startsWith("M"))) || (col("payload.pull_request.head.repo.open_issues") <= 3279.928225)))).groupBy(col("payload.pull_request.assignee.avatar_url")).agg(count(col("payload.comment"))).show(),
      // (df: DataFrame) => df.where((((((((col("payload.pull_request.base.repo.svn_url").isNotNull) || (col("payload.release.author.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.owner.received_events_url").startsWith("h"))) || (col("payload.issue.user.received_events_url").isNotNull)) && ((col("payload.pull_request.comments") === 431) || (col("payload.pull_request.base.repo.commits_url").isNotNull))) && ((((((col("payload.pull_request.head.user.login").startsWith("i")) || (col("payload.pull_request.head.user.login").startsWith("x"))) || (col("payload.pull_request.head.user.login").startsWith("A"))) || (col("payload.pull_request.head.user.login").startsWith("E"))) || (col("payload.pull_request.head.user.login").startsWith("M"))) || (col("payload.pull_request.head.repo.open_issues") <= 3279.928225))) && (((col("payload.pull_request.head.repo.trees_url").isNotNull) && (((((col("payload.pull_request.head.repo.language").startsWith("P")) || (col("payload.pull_request.head.repo.language").startsWith("S"))) || (col("payload.pull_request.head.repo.language").startsWith("C"))) || (col("payload.pull_request.head.repo.language").startsWith("A"))) || (col("payload.pull_request.head.repo.language").startsWith("L")))) || (col("payload.pull_request.merged_by.id") <= 6448862.056744)))).groupBy(col("payload.pull_request.user.id")).count().show(),
      // (df: DataFrame) => df.where((((((((col("payload.pull_request.base.repo.svn_url").isNotNull) || (col("payload.release.author.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.owner.received_events_url").startsWith("h"))) || (col("payload.issue.user.received_events_url").isNotNull)) && ((col("payload.pull_request.comments") === 431) || (col("payload.pull_request.base.repo.commits_url").isNotNull))) && ((((((col("payload.pull_request.head.user.login").startsWith("i")) || (col("payload.pull_request.head.user.login").startsWith("x"))) || (col("payload.pull_request.head.user.login").startsWith("A"))) || (col("payload.pull_request.head.user.login").startsWith("E"))) || (col("payload.pull_request.head.user.login").startsWith("M"))) || (col("payload.pull_request.head.repo.open_issues") <= 3279.928225))) && (((col("payload.pull_request.head.repo.updated_at").isNotNull) && (col("payload.pull_request.head.repo.owner.avatar_url").startsWith("ht"))) && (col("payload.pull_request.user.id") <= 12985381.071574)))).groupBy(col("payload.pull_request.merged_at")).agg(count(col("payload.pull_request.base.repo.downloads_url"))).show(),
      // (df: DataFrame) => df.where((((((((col("payload.pull_request.base.repo.svn_url").isNotNull) || (col("payload.release.author.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.owner.received_events_url").startsWith("h"))) || (col("payload.issue.user.received_events_url").isNotNull)) && ((col("payload.pull_request.comments") === 431) || (col("payload.pull_request.base.repo.commits_url").isNotNull))) && ((((((col("payload.pull_request.head.user.login").startsWith("i")) || (col("payload.pull_request.head.user.login").startsWith("x"))) || (col("payload.pull_request.head.user.login").startsWith("A"))) || (col("payload.pull_request.head.user.login").startsWith("E"))) || (col("payload.pull_request.head.user.login").startsWith("M"))) || (col("payload.pull_request.head.repo.open_issues") <= 3279.928225))) && (((col("payload.pull_request.assignee.received_events_url").startsWith("ht")) || ((col("payload.pull_request.milestone.title").startsWith("0")) || (col("payload.pull_request.milestone.title").startsWith("1")))) || (col("payload.pull_request.user.id") <= 3802576.359829)))).groupBy(col("payload.pull_request.base.repo.archive_url")).count().show(),
      // (df: DataFrame) => df.where((((((((col("payload.pull_request.base.repo.svn_url").isNotNull) || (col("payload.release.author.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.owner.received_events_url").startsWith("h"))) || (col("payload.issue.user.received_events_url").isNotNull)) && ((col("payload.pull_request.comments") === 431) || (col("payload.pull_request.base.repo.commits_url").isNotNull))) && ((((((col("payload.pull_request.head.user.login").startsWith("i")) || (col("payload.pull_request.head.user.login").startsWith("x"))) || (col("payload.pull_request.head.user.login").startsWith("A"))) || (col("payload.pull_request.head.user.login").startsWith("E"))) || (col("payload.pull_request.head.user.login").startsWith("M"))) || (col("payload.pull_request.head.repo.open_issues") <= 3279.928225))) && (col("org.avatar_url").isNotNull))).groupBy(col("org.id")).count().show(),
      // (df: DataFrame) => df.where(((((((((col("payload.pull_request.base.repo.svn_url").isNotNull) || (col("payload.release.author.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.owner.received_events_url").startsWith("h"))) || (col("payload.issue.user.received_events_url").isNotNull)) && ((col("payload.pull_request.comments") === 431) || (col("payload.pull_request.base.repo.commits_url").isNotNull))) && ((((((col("payload.pull_request.head.user.login").startsWith("i")) || (col("payload.pull_request.head.user.login").startsWith("x"))) || (col("payload.pull_request.head.user.login").startsWith("A"))) || (col("payload.pull_request.head.user.login").startsWith("E"))) || (col("payload.pull_request.head.user.login").startsWith("M"))) || (col("payload.pull_request.head.repo.open_issues") <= 3279.928225))) && (col("org.avatar_url").isNotNull)) && (col("payload.pull_request.head.repo.has_issues") === true))).groupBy(col("payload.pull_request.head.user.type")).count().show(),
      // (df: DataFrame) => df.where(((((((((col("payload.pull_request.base.repo.svn_url").isNotNull) || (col("payload.release.author.starred_url").isNotNull)) || (col("payload.pull_request.base.repo.owner.received_events_url").startsWith("h"))) || (col("payload.issue.user.received_events_url").isNotNull)) && ((col("payload.pull_request.comments") === 431) || (col("payload.pull_request.base.repo.commits_url").isNotNull))) && ((((((col("payload.pull_request.head.user.login").startsWith("i")) || (col("payload.pull_request.head.user.login").startsWith("x"))) || (col("payload.pull_request.head.user.login").startsWith("A"))) || (col("payload.pull_request.head.user.login").startsWith("E"))) || (col("payload.pull_request.head.user.login").startsWith("M"))) || (col("payload.pull_request.head.repo.open_issues") <= 3279.928225))) && (col("org.avatar_url").isNotNull)) && (col("payload.pull_request.commits") <= 8859.615056))).groupBy(col("payload.pull_request.head.repo.fork")).agg(count(col("payload.pull_request.merged_by.url"))).show(),

      // (df: DataFrame) => df.where(((col("payload.forkee.owner.avatar_url").isNotNull) || (col("org.url").startsWith("ht")))).groupBy(col("payload.pull_request.base.user.avatar_url")).agg(count(col("payload.issue.user.site_admin"))).show(),
      // (df: DataFrame) => df.where((((col("payload.forkee.owner.avatar_url").isNotNull) || (col("org.url").startsWith("ht"))) && (((col("payload.pull_request.head.repo.collaborators_url").startsWith("h")) || ((col("payload.issue.milestone.due_on").startsWith("201")) || (col("payload.issue.milestone.due_on").startsWith("203")))) || (col("payload.comment.html_url").isNotNull)))).groupBy(col("payload.forkee.notifications_url")).count().show(),
      // (df: DataFrame) => df.where(((((col("payload.forkee.owner.avatar_url").isNotNull) || (col("org.url").startsWith("ht"))) && (((col("payload.pull_request.head.repo.collaborators_url").startsWith("h")) || ((col("payload.issue.milestone.due_on").startsWith("201")) || (col("payload.issue.milestone.due_on").startsWith("203")))) || (col("payload.comment.html_url").isNotNull))) && (col("payload.issue.user.following_url").startsWith("h")))).groupBy(col("payload.issue.id")).agg(count(col("payload.pull_request.mergeable"))).show(),
      // (df: DataFrame) => df.where((((((col("payload.forkee.owner.avatar_url").isNotNull) || (col("org.url").startsWith("ht"))) && (((col("payload.pull_request.head.repo.collaborators_url").startsWith("h")) || ((col("payload.issue.milestone.due_on").startsWith("201")) || (col("payload.issue.milestone.due_on").startsWith("203")))) || (col("payload.comment.html_url").isNotNull))) && (col("payload.issue.user.following_url").startsWith("h"))) && (((col("payload.comment.user.events_url").isNotNull) && (col("payload.issue.assignee.type").isNotNull)) || (col("repo.id") <= 20251024.813508)))).groupBy(col("payload.issue.assignee.followers_url")).count().show(),
      // (df: DataFrame) => df.where(((((((col("payload.forkee.owner.avatar_url").isNotNull) || (col("org.url").startsWith("ht"))) && (((col("payload.pull_request.head.repo.collaborators_url").startsWith("h")) || ((col("payload.issue.milestone.due_on").startsWith("201")) || (col("payload.issue.milestone.due_on").startsWith("203")))) || (col("payload.comment.html_url").isNotNull))) && (col("payload.issue.user.following_url").startsWith("h"))) && (((col("payload.comment.user.events_url").isNotNull) && (col("payload.issue.assignee.type").isNotNull)) || (col("repo.id") <= 20251024.813508))) && (col("payload.issue.assignee.received_events_url").isNotNull))).groupBy(col("payload.issue.title")).agg(count(col("payload.comment.user.url"))).show(),
      // (df: DataFrame) => df.where((((((((col("payload.forkee.owner.avatar_url").isNotNull) || (col("org.url").startsWith("ht"))) && (((col("payload.pull_request.head.repo.collaborators_url").startsWith("h")) || ((col("payload.issue.milestone.due_on").startsWith("201")) || (col("payload.issue.milestone.due_on").startsWith("203")))) || (col("payload.comment.html_url").isNotNull))) && (col("payload.issue.user.following_url").startsWith("h"))) && (((col("payload.comment.user.events_url").isNotNull) && (col("payload.issue.assignee.type").isNotNull)) || (col("repo.id") <= 20251024.813508))) && (col("payload.issue.assignee.received_events_url").isNotNull)) && (((((((col("payload.issue.milestone.creator.login").startsWith("a")) || (col("payload.issue.milestone.creator.login").startsWith("m"))) || (col("payload.issue.milestone.creator.login").startsWith("s"))) || (col("payload.issue.milestone.creator.login").startsWith("j"))) || (col("payload.issue.milestone.creator.login").startsWith("r"))) || (col("repo.id") >= 7580547.306154)) && (col("payload.issue.milestone.creator.type").isNotNull)))).groupBy(col("public")).count().show(),
      // (df: DataFrame) => df.where(((((((((col("payload.forkee.owner.avatar_url").isNotNull) || (col("org.url").startsWith("ht"))) && (((col("payload.pull_request.head.repo.collaborators_url").startsWith("h")) || ((col("payload.issue.milestone.due_on").startsWith("201")) || (col("payload.issue.milestone.due_on").startsWith("203")))) || (col("payload.comment.html_url").isNotNull))) && (col("payload.issue.user.following_url").startsWith("h"))) && (((col("payload.comment.user.events_url").isNotNull) && (col("payload.issue.assignee.type").isNotNull)) || (col("repo.id") <= 20251024.813508))) && (col("payload.issue.assignee.received_events_url").isNotNull)) && (((((((col("payload.issue.milestone.creator.login").startsWith("a")) || (col("payload.issue.milestone.creator.login").startsWith("m"))) || (col("payload.issue.milestone.creator.login").startsWith("s"))) || (col("payload.issue.milestone.creator.login").startsWith("j"))) || (col("payload.issue.milestone.creator.login").startsWith("r"))) || (col("repo.id") >= 7580547.306154)) && (col("payload.issue.milestone.creator.type").isNotNull))) && (col("payload.comment.url").isNotNull))).groupBy(col("payload.issue.milestone.description")).count().show(),
      // (df: DataFrame) => df.where((((((((((col("payload.forkee.owner.avatar_url").isNotNull) || (col("org.url").startsWith("ht"))) && (((col("payload.pull_request.head.repo.collaborators_url").startsWith("h")) || ((col("payload.issue.milestone.due_on").startsWith("201")) || (col("payload.issue.milestone.due_on").startsWith("203")))) || (col("payload.comment.html_url").isNotNull))) && (col("payload.issue.user.following_url").startsWith("h"))) && (((col("payload.comment.user.events_url").isNotNull) && (col("payload.issue.assignee.type").isNotNull)) || (col("repo.id") <= 20251024.813508))) && (col("payload.issue.assignee.received_events_url").isNotNull)) && (((((((col("payload.issue.milestone.creator.login").startsWith("a")) || (col("payload.issue.milestone.creator.login").startsWith("m"))) || (col("payload.issue.milestone.creator.login").startsWith("s"))) || (col("payload.issue.milestone.creator.login").startsWith("j"))) || (col("payload.issue.milestone.creator.login").startsWith("r"))) || (col("repo.id") >= 7580547.306154)) && (col("payload.issue.milestone.creator.type").isNotNull))) && (col("payload.comment.url").isNotNull)) && ((col("payload.issue.id") === 778546) || (col("payload.comment.id") <= 143974661.109923)))).groupBy(col("org.avatar_url")).agg(count(col("actor.gravatar_id"))).show(),
      // (df: DataFrame) => df.where(((((((((((col("payload.forkee.owner.avatar_url").isNotNull) || (col("org.url").startsWith("ht"))) && (((col("payload.pull_request.head.repo.collaborators_url").startsWith("h")) || ((col("payload.issue.milestone.due_on").startsWith("201")) || (col("payload.issue.milestone.due_on").startsWith("203")))) || (col("payload.comment.html_url").isNotNull))) && (col("payload.issue.user.following_url").startsWith("h"))) && (((col("payload.comment.user.events_url").isNotNull) && (col("payload.issue.assignee.type").isNotNull)) || (col("repo.id") <= 20251024.813508))) && (col("payload.issue.assignee.received_events_url").isNotNull)) && (((((((col("payload.issue.milestone.creator.login").startsWith("a")) || (col("payload.issue.milestone.creator.login").startsWith("m"))) || (col("payload.issue.milestone.creator.login").startsWith("s"))) || (col("payload.issue.milestone.creator.login").startsWith("j"))) || (col("payload.issue.milestone.creator.login").startsWith("r"))) || (col("repo.id") >= 7580547.306154)) && (col("payload.issue.milestone.creator.type").isNotNull))) && (col("payload.comment.url").isNotNull)) && ((col("payload.issue.id") === 778546) || (col("payload.comment.id") <= 143974661.109923))) && ((col("payload.issue.pull_request.patch_url").isNotNull) || (col("payload.comment.id") <= 77582928.033588)))).groupBy(col("repo.name")).agg(count(col("payload.issue.html_url"))).show(),
      // (df: DataFrame) => df.where(((((((((((col("payload.forkee.owner.avatar_url").isNotNull) || (col("org.url").startsWith("ht"))) && (((col("payload.pull_request.head.repo.collaborators_url").startsWith("h")) || ((col("payload.issue.milestone.due_on").startsWith("201")) || (col("payload.issue.milestone.due_on").startsWith("203")))) || (col("payload.comment.html_url").isNotNull))) && (col("payload.issue.user.following_url").startsWith("h"))) && (((col("payload.comment.user.events_url").isNotNull) && (col("payload.issue.assignee.type").isNotNull)) || (col("repo.id") <= 20251024.813508))) && (col("payload.issue.assignee.received_events_url").isNotNull)) && (((((((col("payload.issue.milestone.creator.login").startsWith("a")) || (col("payload.issue.milestone.creator.login").startsWith("m"))) || (col("payload.issue.milestone.creator.login").startsWith("s"))) || (col("payload.issue.milestone.creator.login").startsWith("j"))) || (col("payload.issue.milestone.creator.login").startsWith("r"))) || (col("repo.id") >= 7580547.306154)) && (col("payload.issue.milestone.creator.type").isNotNull))) && (col("payload.comment.url").isNotNull)) && ((col("payload.issue.id") === 778546) || (col("payload.comment.id") <= 143974661.109923))) && ((((((((col("org.login").startsWith("S")) || (col("org.login").startsWith("a"))) || (col("org.login").startsWith("c"))) || (col("org.login").startsWith("s"))) || (col("org.login").startsWith("p"))) || (col("payload.comment.id") === 100290701)) || (col("payload.issue.pull_request.patch_url").isNotNull)) || (col("payload.issue.user.id") <= 8389743.730041)))).groupBy(col("org.gravatar_id")).agg(count(col("created_at"))).show()
    ))
  }
}
